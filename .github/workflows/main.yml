name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      nacos:
        image: nacos/nacos-server:v2.2.3
        env:
          MODE: standalone
        ports:
          - 8848:8848
          - 9848:9848
          - 9849:9849
#        volumes:
#          - ./standalone-logs/:/home/nacos/logs

      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: dymall
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
#     添加了redis服务
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..10}; do
          if mysqladmin ping -h"127.0.0.1" --silent; then
            echo "MySQL is up!"
            break
          fi
          echo "Waiting for MySQL..."
          sleep 5
        done
#    Redis 服务
    - name: Wait for Redis to be ready
      run: |
        for i in {1..10}; do
          if redis-cli -h 127.0.0.1 ping | grep -q "PONG"; then
            echo "Redis is up!"
            break
          fi
          echo "Waiting for Redis..."
          sleep 5
        done

    - name: Create MySQL database
      run: |
        mysql -h127.0.0.1 -uroot -proot -e "CREATE DATABASE IF NOT EXISTS dymall;"

    - name: Build parent first (without skipping tests)
      run: mvn clean install -N

    - name: Build common-api
      run: mvn clean install -pl common-api

    - name: Configure Mockito inline mock maker
      run: |
        mkdir -p src/test/resources/mockito-extensions
        echo "mock-maker-inline" > src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker

    - name: Set environment variables for Mockito
      run: echo "MOCKITO_FORCE_INLINE=true" >> $GITHUB_ENV

    - name: Force update Byte Buddy
      run: mvn dependency:purge-local-repository -DmanualInclude="net.bytebuddy:byte-buddy"
      #       暂时移除了 user-service cart-service checkout-service
    - name: Build and test all microservices
      run: |
        for service in auth-service order-service user-service; do
          if [[ -f "$service/pom.xml" ]]; then
            echo "Building and testing $service..."
            cd $service
            mvn clean verify # -DskipTests   # 👈 这里跳过测试
            cd ..
          fi
        done
