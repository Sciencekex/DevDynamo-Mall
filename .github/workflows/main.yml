name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root123
          MYSQL_DATABASE: dymall
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..10}; do
          if mysqladmin ping -h"127.0.0.1" --silent; then
            echo "MySQL is up!"
            break
          fi
          echo "Waiting for MySQL..."
          sleep 5
        done

    - name: Create MySQL database
      run: |
        mysql -h127.0.0.1 -uroot -proot123 -e "CREATE DATABASE IF NOT EXISTS dymall;"

    - name: Find all application.properties
      run: find . -name "application.properties"

    - name: Build parent first (without skipping tests)
      run: mvn clean install -N

    - name: Build common-api
      run: mvn clean install -pl common-api

    # **创建 mockito-extensions，强制使用 mock-maker-inline**
    - name: Configure Mockito inline mock maker
      run: |
        mkdir -p src/test/resources/mockito-extensions
        echo "mock-maker-inline" > src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker

    # **设置环境变量**
    - name: Set environment variables for Mockito
      run: echo "MOCKITO_FORCE_INLINE=true" >> $GITHUB_ENV

    # **清理旧版本的 Byte Buddy，确保使用最新版本**
    - name: Force update Byte Buddy
      run: mvn dependency:purge-local-repository -DactTransitively=false -DmanualInclude="net.bytebuddy:byte-buddy"

    # **运行所有微服务的测试**
    - name: Build and test all microservices
      run: |
        for service in auth-service user-service cart-service checkout-service order-service; do
          if [[ -f "$service/pom.xml" ]]; then
            echo "Building and testing $service..."
            cd $service
            mvn clean verify
            cd ..
          fi
        done
